<Application x:Class="ExtractMe.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:extractMe="clr-namespace:ExtractMe"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>

            <!--hier wird eine Instanz der Klasse MyViewModel erzeugt und mit Daten gefüllt, Key wichtig -->
            <extractMe:MyViewModel x:Key="MyViewModel123" Header="MyHeader" Footer="MyFooter">
                <extractMe:MyViewModel.Liste>
                    <x:ArrayExtension Type="{x:Type system:String}">
                        <!--wer kommt denn auf so was???????-->
                        <system:String>Rot</system:String>
                        <system:String>Blau</system:String>
                        <system:String>Grün</system:String>
                        <system:String>Gelb</system:String>
                    </x:ArrayExtension>
                </extractMe:MyViewModel.Liste>
            </extractMe:MyViewModel>

            <!--wenn ich den später mal verwenden will MUSS ich ihn hier so deklarieren??? Key wichtig-->
            <!--MUSS nein, aber hier global Scope also immer sichtbar-->
            <BooleanToVisibilityConverter x:Key="VisibilityConverter456"></BooleanToVisibilityConverter>

            <ControlTemplate x:Key="MyContentControlTemplate" TargetType="ContentControl">
                <StackPanel>
                    <Border Name="HeaderControl" BorderBrush="Black" BorderThickness="1" Background="Thistle"  Padding="11" >
                        <TextBlock FontWeight="Bold" FontSize="22" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center">
                            <ContentPresenter Content="{TemplateBinding Content}"></ContentPresenter>
                            <!-- geht auch einfach so: <ContentPresenter></ContentPresenter>-->
                        </TextBlock>
                    </Border>
                </StackPanel>
            </ControlTemplate>

        </ResourceDictionary>
    </Application.Resources>
</Application>
